// tslint:disable:comment-format
//import { EventEmitter } from '@angular/core';
//import {DomSanitizationService} from '@angular/platform-browser';
//import { DomSanitizer } from '@angular/platform-browser';

// import { Observable } from 'rxjs/Observable';
import { DataStorageService } from './../services/data-storage.service';
import { Component, OnInit, ViewChild, Inject, Output } from '@angular/core';
// import { DataSource } from '@angular/cdk/collections';
// import { NgForm, AbstractControl } from '@angular/forms';

// import { FormControl, FormGroupDirective, Validators } from '@angular/forms';
// import { ErrorStateMatcher } from '@angular/material/core';
import { MatTableDataSource, MatPaginator, MatSort } from '@angular/material';

// Disse tre skal slettes nÃ¥r kontakt med database er i egen service
// import { Headers, Http, Response, RequestOptions } from '@angular/http';
// import { Injectable } from '@angular/core';
//import { EventEmitter } from '@angular/core';

//import { AuthService } from './../signin/auth.service';
//import { Lister } from '../services/lister';


@Component({
  selector: 'app-kandidater',
  templateUrl: './kandidater.component.html',
  styleUrls: ['./kandidater.component.css']
})
export class KandidaterComponent implements OnInit {

  @ViewChild(MatPaginator) paginator: MatPaginator;
  @ViewChild(MatSort) sort: MatSort;
  // @ViewChild('form') signupForm: NgForm;

  aapneElement(e) {
    console.log('kandidater aapneElement()');
    if(!e.poster){
      e.poster=[];
    }
   
    this.redigerObjekt = e;
  }

//  private feilmelding;

  redigerObjekt: any;

  constructor(// private ds: DataStorageService,
  //  private http: Http,
  //  private authService: AuthService,
  //  private lister: Lister,
    public dss: DataStorageService,
 
  ) { }


  //private sanitizer: DomSanitizer;
//  private image: any;
//  private readonly imageType: string = 'data:image/JPG;base64,';

  displayedColumns = ['fornavn', 'etternavn', 'primaerkompetanse', 'flyplass'];
  dataSource;
 // bildeliste: any[];


  ngOnInit() {
  //  this.authService.getToken();
    this.dss.getIndex('kandidater').subscribe(
      (recipes: any[]) => {
        //  console.log(recipes);
        this.dataSource = new MatTableDataSource<any>(recipes);
        this.dataSource.paginator = this.paginator;
        this.dataSource.sort = this.sort;

      }

      ,
      (error) => {

      }
    );

  }


  applyFilter(filterValue: string) {
    filterValue = filterValue.trim(); // Remove whitespace
    filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches
    this.dataSource.filter = filterValue;
  }


  leggTilNy() {
    this.redigerObjekt = {
      id: 'ny',
      adresse: '',
      cv_poster: [],
      etternavn: '(Ny kandidat)',
      flyplass: '',
      fodselsaar: '',
      fornavn: '(Ny kandidat)',

      image_id: 'ny',
      mail: '',
      nasjonalitet: '',
      postnummer: '',
      poststed: '',
      telefon: '',
      primaerkompetanse: '',
      poster: '',
    };


  }

  redigerObjektEndret(objekt: any) {

    this.dss.getIndex('kandidater').subscribe(
      (recipes: any[]) => {
        this.dataSource = new MatTableDataSource<any>(recipes);
        this.dataSource.paginator = this.paginator;
        this.dataSource.sort = this.sort;
      }
    );
    // console.log(count);
  }
/*

  getListe() {
    return this.http.get(this.req, this.authService.getOpts())
      .map(response => {
        //   console.log(response);
        return response.json().data;
      }).catch(
      (error: Response) => {
        console.log(error);
        return Observable.throw(error.json());
      }
      );
  }*/
}
